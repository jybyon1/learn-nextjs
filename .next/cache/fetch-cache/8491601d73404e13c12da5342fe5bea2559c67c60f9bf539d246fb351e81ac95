{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","cf-ray":"8c764e7d3dcadfd5-NRT","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Mon, 23 Sep 2024 00:09:33 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=mFAvXSyX4RcTPD1T9LWMmFUeJR%2Bw%2BmoYGnqlNhEQdv3Oxy2SRXRsOre7RvZN%2FrCG7B%2BtFPVGaZLncMzQvAsHwR4Qparl52JYqz4EqLxCKFWcy%2FY1DTPcmQwZpmPchCZjnnFwBYfA2uz9tOOrfGhOorEVadN9Op0%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies"},"revalidate":31536000,"tags":[]}